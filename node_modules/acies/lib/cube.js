"use strict";
exports.__esModule = true;
var vector_1 = require("./vector");
var box_1 = require("./box");
var hit_1 = require("./hit");
var Cube = /** @class */ (function () {
    function Cube(min, max) {
        this.min = min;
        this.max = max;
        this.box = new box_1.Box(min, max);
    }
    Cube.prototype.compile = function () {
        // noop
    };
    Cube.prototype.boundingBox = function () {
        return this.box;
    };
    Cube.prototype.contains = function (v, f) {
        if (v.x < this.min.x - f || v.x > this.max.x + f) {
            return false;
        }
        if (v.y < this.min.y - f || v.y > this.max.y + f) {
            return false;
        }
        if (v.z < this.min.z - f || v.z > this.max.z + f) {
            return false;
        }
        return true;
    };
    Cube.prototype.intersect = function (r) {
        var _a;
        var f = this.max.sub(r.origin).div(r.direction);
        var n = this.min.sub(r.origin).div(r.direction);
        _a = [n.min(f), n.max(f)], n = _a[0], f = _a[1];
        var t0 = Math.max(Math.max(n.x, n.y), n.z);
        var t1 = Math.min(Math.min(f.x, f.y), f.z);
        if (t0 < 1e-3 && t1 > 1e-3) {
            return new hit_1["default"](this, t1);
        }
        if (t0 >= 1e-3 && t0 < t1) {
            return new hit_1["default"](this, t0);
        }
        return hit_1.NoHit;
    };
    Cube.prototype.paths = function () {
        var _a = [this.min.x, this.min.y, this.min.z], x1 = _a[0], y1 = _a[1], z1 = _a[2];
        var _b = [this.max.x, this.max.y, this.max.z], x2 = _b[0], y2 = _b[1], z2 = _b[2];
        return [
            [new vector_1["default"](x1, y1, z1), new vector_1["default"](x1, y1, z2)],
            [new vector_1["default"](x1, y1, z1), new vector_1["default"](x1, y2, z1)],
            [new vector_1["default"](x1, y1, z1), new vector_1["default"](x2, y1, z1)],
            [new vector_1["default"](x1, y1, z2), new vector_1["default"](x1, y2, z2)],
            [new vector_1["default"](x1, y1, z2), new vector_1["default"](x2, y1, z2)],
            [new vector_1["default"](x1, y2, z1), new vector_1["default"](x1, y2, z2)],
            [new vector_1["default"](x1, y2, z1), new vector_1["default"](x2, y2, z1)],
            [new vector_1["default"](x1, y2, z2), new vector_1["default"](x2, y2, z2)],
            [new vector_1["default"](x2, y1, z1), new vector_1["default"](x2, y1, z2)],
            [new vector_1["default"](x2, y1, z1), new vector_1["default"](x2, y2, z1)],
            [new vector_1["default"](x2, y1, z2), new vector_1["default"](x2, y2, z2)],
            [new vector_1["default"](x2, y2, z1), new vector_1["default"](x2, y2, z2)]
        ];
    };
    return Cube;
}());
exports["default"] = Cube;
