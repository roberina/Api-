"use strict";
exports.__esModule = true;
var box_1 = require("./box");
var vector_1 = require("./vector");
var hit_1 = require("./hit");
var math_1 = require("./math");
var Cone = /** @class */ (function () {
    function Cone(radius, height) {
        this.radius = radius;
        this.height = height;
    }
    Cone.prototype.compile = function () {
        // noop
    };
    Cone.prototype.boundingBox = function () {
        var r = this.radius;
        return new box_1.Box(new vector_1["default"](-r, -r, 0), new vector_1["default"](r, r, this.height));
    };
    Cone.prototype.contains = function (v, f) {
        // TODO is this right, or was this just not implemented in ln?
        return false;
    };
    Cone.prototype.intersect = function (ray) {
        var _a;
        var o = ray.origin;
        var d = ray.direction;
        var r = this.radius;
        var h = this.height;
        var k = r / h;
        k = k * k;
        var a = d.x * d.x + d.y * d.y - k * d.z * d.z;
        var b = 2 * (d.x * o.x + d.y * o.y - k * d.z * (o.z - h));
        var c = o.x * o.x + o.y * o.y - k * (o.z - h) * (o.z - h);
        var q = b * b - 4 * a * c;
        if (q <= 0) {
            return hit_1.NoHit;
        }
        var s = Math.sqrt(q);
        var t0 = (-b + s) / (2 * a);
        var t1 = (-b - s) / (2 * a);
        if (t0 > t1) {
            _a = [t1, t0], t0 = _a[0], t1 = _a[1];
        }
        if (t0 > 1e-6) {
            var p = ray.position(t0);
            if (p.z > 0 && p.z < h) {
                return new hit_1["default"](this, t0);
            }
        }
        if (t1 > 1e-6) {
            var p = ray.position(t1);
            if (p.z > 0 && p.z < h) {
                return new hit_1["default"](this, t1);
            }
        }
        return hit_1.NoHit;
    };
    Cone.prototype.paths = function () {
        var result = [];
        for (var a = 0; a < 360; a += 30) {
            var x = this.radius * Math.cos(math_1.radians(a));
            var y = this.radius * Math.sin(math_1.radians(a));
            var p = [new vector_1["default"](x, y, 0), new vector_1["default"](0, 0, this.height)];
            result.push(p);
        }
        return result;
    };
    return Cone;
}());
exports["default"] = Cone;
