import * as Path from "./path";
export function boundingBox(p) {
    let box = Path.boundingBox(p[0]);
    for (const path of p) {
        box = box.extend(Path.boundingBox(path));
    }
    return box;
}
export function transform(p, matrix) {
    let result = [];
    for (const path of p) {
        result.push(Path.transform(path, matrix));
    }
    return result;
}
export function chop(p, step) {
    var result = [];
    for (const path of p) {
        result.push(Path.chop(path, step));
    }
    return result;
}
export function filterPaths(p, f) {
    var result = [];
    for (const path of p) {
        result.push(...Path.filterPaths(path, f));
    }
    return result;
}
export function simplify(p, threshold) {
    var result = [];
    for (const path of p) {
        result.push(Path.simplify(path, threshold));
    }
    return result;
}
export function toSVG(p, width, height) {
    let lines = [];
    lines.push(`<svg width="${width}" height="${height}" version="1.1" baseProfile="full" xmlns="http://www.w3.org/2000/svg">`);
    lines.push(`<g transform="translate(0,${height}) scale(1,-1)">`);
    for (const path of p) {
        lines.push(Path.toSVG(path));
    }
    lines.push(`</g></svg>`);
    return lines.join("\n");
}
